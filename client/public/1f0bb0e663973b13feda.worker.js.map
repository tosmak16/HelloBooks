{"version":3,"sources":["webpack:///webpack/bootstrap 1f0bb0e663973b13feda","webpack:///./node_modules/pdfjs-dist/build/pdf.worker.js","webpack:///./node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js"],"names":["hotCreateRequire","moduleId","me","installedModules","__webpack_require__","fn","request","hot","active","parents","indexOf","push","hotCurrentParents","hotCurrentChildModule","children","console","warn","ObjectFactory","name","configurable","enumerable","get","set","value","Object","prototype","hasOwnProperty","call","defineProperty","e","chunkId","finishChunkLoading","hotChunksLoading","hotStatus","hotWaitingFilesMap","hotEnsureUpdateChunk","hotWaitingFiles","hotUpdateDownloaded","hotSetStatus","then","err","newStatus","i","hotStatusHandlers","length","toModuleId","id","hotCheck","apply","Error","hotApplyOnUpdate","requestTimeout","Promise","resolve","reject","XMLHttpRequest","requestPath","p","hotCurrentHash","open","timeout","send","onreadystatechange","readyState","status","update","JSON","parse","responseText","hotDownloadManifest","hotRequestTimeout","hotRequestedFilesMap","hotAvailableFilesMap","c","hotUpdateNewHash","h","promise","hotDeferred","hotUpdate","importScripts","hotDownloadUpdateChunk","deferred","hotApply","result","outdatedModules","options","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","module","_selfAccepted","_selfDeclined","type","_main","parentId","parent","_declinedDependencies","concat","_acceptedDependencies","addAllToSet","a","b","item","cb","j","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","idx","data","disposeHandlers","_disposeHandlers","hotCurrentModuleData","child","splice","dependency","moduleOutdatedDependencies","modules","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","orginalError","originalError","exports","l","accept","dep","callback","decline","dispose","addDisposeHandler","removeDisposeHandler","check","addStatusHandler","removeStatusHandler","undefined","hotCreateModule","hotCurrentParentsTemp","parentHotUpdateCallback","this","moreModules","hotAddUpdateChunk","m","d","getter","o","n","__esModule","object","property","s","process","global","root","factory","__w_pdfjs_require__","msg","verbosity","VERBOSITY_LEVELS","warnings","log","unreachable","assert","cond","stringToBytes","str","bytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","createPromiseCapability","capability","resolveCall","args","thisArg","arguments","wrapReason","reason","_typeof","AbortException","message","MissingPDFException","UnexpectedResponseException","UnknownErrorException","details","resolveOrReject","success","MessageHandler","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","create","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","action","_sourceName","_targetName","postMessage","toString","makeReasonSerializable","_createStreamSink","addEventListener","utf8StringToString","stringToUTF8String","stringToPDFString","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","readInt8","log2","loadJpegStream","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isNodeJS","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","deprecated","createObjectURL","createBlob","bytesToString","arraysToBytes","FormatError","XRefParseException","Util","TextRenderingMode","StreamType","StatTimer","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingDataException","InvalidPDFException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","Symbol","iterator","obj","constructor","_streams_polyfill","errors","infos","code","begin","end","NullCharactersRegExp","rgbBuf","makeCssRgb","r","g","transform","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","p3","p4","Math","min","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","Number","isInteger","pos","romanBuf","romanStr","toLowerCase","appendToArray","arr1","arr2","Array","prependToArray","unshift","extendObj","obj1","obj2","key","getInheritableProperty","dict","getArray","has","inherit","sub","base","prop","loadScript","src","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","width","height","abs","fontScale","clone","convertToViewportPoint","x","y","convertToViewportRectangle","tl","br","convertToPdfPoint","PDFStringTranslateTable","rpad","pad","started","times","enabled","time","Date","now","timeEnd","start","ii","out","longest","span","duration","contentType","Blob","digits","URL","blob","buffer","b1","b2","b3","on","actionName","handler","scope","transfers","sendWithPromise","sendWithStream","queueingStrategy","_this2","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","self","sendStreamRequest","_ref","chunk","streamSink","enqueue","size","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref2","deleteStreamController","all","catch","finalize","destroy","removeEventListener","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","SOLID","DASHED","BEVELED","INSET","UNDERLINE","READONLY","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","INVISIBLE","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","UNKNOWN","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","NONE","BINARY","STREAM","DECODE","DISPLAY","NEED_PASSWORD","INCORRECT_PASSWORD","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FILL","STROKE","FILL_STROKE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","itemLength","resultLength","String","fromCharCode","strBuf","chunkEnd","subarray","initializer","lookup","ch","baseUrl","otherUrl","origin","other","url","absoluteUrl","protocol","isValidProtocol","ex","buffer8","Uint32Array","Function","imageUrl","objs","img","Image","onerror","offset","replace","level","writable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","window","__g","isName","Name","isDict","Dict","isRef","Ref","EOF","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","xref","_map","objId","suppressEncryption","__nonSerializable__","nonSerializable","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isArray","fetch","getRaw","getKeys","empty","merge","dictArray","mergedDict","keyName","num","gen","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","it","store","uid","_Symbol","USE_SYMBOL","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","JpxStream","JpegStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","_jpg","_jpx","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","maybeMinBufferLength","bufferLength","eof","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","maybeLength","cmf","flg","codeSize","codeBuf","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","kk","prevRow","up","upLeft","left","pa","pb","pc","req","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","forceDataSchema","jpxImage","JpxImage","componentsCount","tileCount","tiles","items","Uint8ClampedArray","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","top","srcPosition","dataPosition","imgRowSize","tileRowSize","decrypt","nextChunk","initialized","hasMoreData","input","firstDigit","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","core","hide","redefine","ctx","$export","own","exp","IS_FORCED","F","IS_GLOBAL","G","IS_PROTO","P","IS_BIND","B","target","S","expProto","U","W","R","version","__e","dP","createDesc","f","isObject","TypeError","exec","aFunction","that","toInteger","anObject","IE8_DOM_DEFINE","toPrimitive","O","Attributes","SRC","$toString","TPL","split","inspectSource","safe","isFunction","px","random","ceil","floor","isNaN","defined","Constructor","forbiddenField","def","TAG","tag","stat","ColorSpace","getRgb","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","resizeRgbImage","usesZeroToOneRange","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","refcs","mode","altIR","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","pow","L","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","color","adjustToRange","decodeL","DECODE_L_CONSTANT","C","AGR","BGG","CGB","X","Y","Z","XYZ","tempConvertMatrix1","XYZ_Flat","tempConvertMatrix2","sourceWhitePoint","XYZ_In","LMS","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","convertToFlat","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","bitmap","IObject","index","cof","ARG","T","tryGet","callee","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","CCITTFaxStream","Jbig2Stream","knownCommands","toHexDigit","specialChars","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj3","hints","hintsLength","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","valueOf","propertyIsEnumerable","shared","$keys","enumBugKeys","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","SPECIES","D","SAFE_CLOSING","riter","from","skipClosing","iter","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","KEY","NEED","fastKey","getWeak","onFreeze","getGlyphsUnicode","getDingbatsGlyphsUnicode","Typed","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","TypedArrayConstructors","RangeError","hiddenKeys","getOwnPropertyNames","toIObject","arrayIndexOf","IE_PROTO","names","toAbsoluteIndex","IS_INCLUDES","el","fromIndex","aLen","endPos","Iterators","ArrayProto","dPs","Empty","_createDict","iframeDocument","iframe","style","display","contentWindow","write","lt","Properties","documentElement","ObjectProto","getPrototypeOf","classof","getIteratorMethod","addToUnscopables","iterated","kind","_t","_i","_k","Arguments","LIBRARY","$iterCreate","setToStringTag","BUGGY","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","values","DESCRIPTORS","pIE","gOPD","getOwnPropertyDescriptor","test","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","run","listener","nextTick","port2","port1","onmessage","removeChild","setTimeout","newPromiseCapability","promiseCapability","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","read","readChunk","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","lastChunk","onError","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","_arr","_n","_d","_e","_s","sliceIterator","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","pageIndex","getPageDict","createPage","nodesToVisit","currentNode","currentPageIndex","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","addDefaultProtocolToUrl","urlDict","remoteDest","stringify","namedAction","jsAction","URL_OPEN_METHODS","jsUrl","RegExp","tryConvertUrlEncoding","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","readToken","token","LF","CR","LT","skipUntil","dataLength","objRegExp","trailerBytes","startxrefBytes","endobjBytes","xrefBytes","trailers","xrefStms","contentLength","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","_arithmetic_decoder","JpxError","failOnCorruptedImage","getBlocksDimensions","context","component","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","tile","components","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","siz","SIZ","tileIndex","currentTile","Csiz","blocksDimensions","tcx0","tcy0","tcx1","tcy1","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","x0","y0","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","zeroBitPlanes","dataItem","totalLength","codingpasses","encodedData","decoder","ArithmeticDecoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","SubbandsGainLog2","calculate","LL","LH","HL","HH","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","Xsiz","Ysiz","XOsiz","YOsiz","doNotRecover","sqcd","spqcdSize","mainHeader","XTsiz","YTsiz","XTOsiz","YTOsiz","isSigned","XRsiz","YRsiz","x1","y1","calculateComponentDimensions","numXtiles","numYtiles","tx0","ty0","tx1","ty1","tileComponent","calculateTileGrids","QCC","COC","qcd","noQuantization","spqcd","QCD","qcc","cqcc","cod","scod","sopMarkerUsed","ephMarkerUsed","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","COD","dataEnd","partIndex","partsCount","qcdOrQcc","initializeTile","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","codingpassesLog2","codedDataLength","packetItem","parseTilePackets","resultImages","transformedTiles","y2","tile0","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","contexts","Int8Array","setNeighborsSignificance","row","column","labels","i0","i1","contextLabel","readBit","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","bp","chigh","clow","byteIn","ct","QeTable","qe","nmps","nlps","switchFlag","cx_index","cx_mps","qeTableIcx","qeIcx","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","mode384","tmp3","tmp1","NullCipher","decrypt128","inv_s","s0","mix","s1","s2","s3","encrypt128","mixCol","cipherKey","t3","t4","rcon","expandKey128","bufferPosition","decryptBlock2","sourceLength","iv","plain","outputLength","lastBlock","psLen","cipher","decrypt256","encrypt256","expandKey256","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","prepareKeyData","revision","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","PartialEvaluator","OperatorList","_cmap","_fonts","_encodings","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_function","_murmurhash","_image","NativeImageDecoder","resources","_ref$forceDataSchema","idFactory","_ref2$options","DefaultPartialEvaluatorOptions","fetchBuiltInCMap","cachedCMap","compressionType","TimeSlotManager","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","canDecode","image","isDecodable","colorSpace","isSupported","checked","endTime","newOptions","newEvaluator","hasBlendModes","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","operatorList","task","initialState","bbox","group","groupOptions","isolated","knockout","groupSubtype","backdrop","addOp","getOperatorList","buildPaintImageXObject","inline","imgData","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","cached","softMask","mask","createImageData","createObjId","addDependency","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","isPDFFunction","transferFn","transferMap","handleTilingType","pattern","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","fnArray","argsArray","tilingPatternIR","addDependencies","dependencies","featureId","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","chars","_this5","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","_this6","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","_this7","fontRes","fontID","fontCapability","preEvaluatedFont","preEvaluateFont","descriptor","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","docId","translatedPromise","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patterns","patternName","typeNum","shading","Pattern","parseShading","_ref3","closePendingRestoreOPS","argument","preprocessor","savedStatesDepth","_this8","_ref3$initialState","EvalState","xobjs","StateManager","EvaluatorPreprocessor","timeSlotManager","promiseBody","ensureNotTerminated","stop","operation","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","fillColorSpace","strokeColorSpace","shadingRes","patternIR","dictName","extGState","getTextContent","_ref4","ensureTextContentItem","textContentItem","textState","seenStyles","textContent","styles","fontFamily","fallbackName","ascent","descent","vertical","tsm","textHScale","textRise","fontMatrix","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","textAdvanceScale","lastAdvanceWidth","lastAdvanceHeight","spaceWidth","fakeSpaceMin","SPACE_FACTOR","fakeMultiSpaceMin","MULTI_SPACE_FACTOR","fakeMultiSpaceMax","MULTI_SPACE_FACTOR_MAX","textRunBreakAllowed","isMonospace","Infinity","runBidiTransform","textChunk","bidiResult","bidi","normalizeWhitespace","WhitespaceRegexp","replaceWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","unicode","NormalizedUnicodes","getNormalizedUnicodes","reverseIfRtl","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","sink","_this9","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","combineTextItems","_ref4$seenStyles","TextState","skipEmptyXObjs","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","properties","_this10","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","encoding","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","file","hasEncoding","buildToUnicode","hasIncludedToUnicodeMap","charcode","glyphName","glyphsUnicodeMap","substr","getUnicodeForGlyph","baseEncoding","ToUnicodeMap","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","cid","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","widths","glyphsWidths","defaultWidth","glyphsVMetrics","vmetrics","parseFloat","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","getSerifFonts","search","monospace","lookupName","getStdFontMap","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","diffLength","diffBuf","diffEntry","hexdigest","_this11","maxCharIndex","Serif","getSymbolsFonts","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cMapPromise","cidEncoding","type3Loaded","sent","fontData","exportData","evaluator","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","intent","messageHandler","_totalLength","flush","CHUNK_SIZE","addOpList","opList","QueueOptimizer","optimize","arg","getTransfers","stateStack","old","prev","txDiff","tyDiff","denominator","calcRenderMatrix","opMap","getOPMap","nonProcessedArgs","numArgs","variableArgs","opSpec","argsLength","preprocessCommand","addState","parentState","InitialState","curr","iCurr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","imgWidth","imgHeight","rowSize","dataOffset","iFirstPIMXO","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","iFirstPIXO","iFirstRestore","firstPIXOArg0","iFirstBeginText","iFirstSetFont","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","firstSetFontArg0","firstSetFontArg1","iFirst","iEndText","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","seacAnalysisEnabled","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontBBox","ascentScaled","charset","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getNonStdFontMap","charsLength","UnicodeRanges","isRTLRangeFor","getSpecialPUASymbols","mapSpecialUnicodeValues","getUnicodeRangeFor","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","_createClass","defineProperties","props","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","instance","_classCallCheck","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","terminated","_capability","finished","finish","terminate","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","headersReady","setup","testMessageProcessed","supportTransfers","xhr","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","startWorkerTask","WorkerTasks","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","numPagesPromise","ensureDoc","fingerprintPromise","encryptedPromise","ensureXRef","results","doc","fingerprint","encrypted","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","cancelXHRs","pdfFile","flushChunks","apiVersion","workerHandlerName","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","renderInteractiveForms","wrappedException","minimumStackMessage","extractTextContent","waitOn","onSuccess","pdfInfo","onFailure","updatePassword","pdfManagerReady","disableCreateObjectURL","newPdfManager","setupDoc","initializeFromPort","maybePort","isMessagePort","PDFJS","compatibilityChecked","globalScope","userAgent","navigator","isAndroid","isAndroidPre3","isAndroidPre5","isChrome","isChromeWithRangeBug","isIOSChrome","isIE","isIOS","isOpera","isSafari","hasDOM","TypedArray","setArrayOffset","Uint32ArrayView","uint32ArrayViewSetters","createUint32ArrayProp","ensureUint32ArrayViewProps","CanvasPixelArray","cpaProto","webkitURL","definePropertyPossible","Test","__defineGetter__","__defineSetter__","xhrPrototype","mimeType","_responseType","overrideMimeType","VBArray","text","responseBody","toArray","btoa","d2","d3","d4","atob","bc","headArgs","HTMLElement","_dataset","dataset","attributes","attribute","changeList","element","itemName","list","className","classListPrototype","contains","toggle","_classList","classList","consoleTimer","workerConsole","ignoreIfTargetDisabled","isDisabled","stopPropagation","disabled","parentNode","locale","userLanguage","disableRange","disableStream","history","pushState","disableHistory","versionMatch","polyfill","match","contextPrototype","CanvasRenderingContext2D","imageData","installFakeAnimationFrameFunctions","requestAnimationFrame","cancelAnimationFrame","timeoutID","clearTimeout","mozRequestAnimationFrame","webkitRequestAnimationFrame","maxCanvasPixels","disableFullscreen","scripts","inputProto","typeProperty","attachEvent","documentProto","readyStateProto","Element","WeakMap","isRelativeScheme","scheme","relative","invalid","_isInvalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","cursor","seenAt","seenBracket","loop","ALPHA","ALPHANUMERIC","_scheme","_isRelative","_query","_fragment","_schemeData","_host","_port","_path","_username","_password","nextC","nextNextC","cp","tempC","temp","relativePathDotMapping","JURL","_url","hasWorkingUrl","pathname","authority","host","hostname","_","OriginalURL","revokeObjectURL","init","byteOffset","fails","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","gOPN","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayValues","arrayKeys","arrayEntries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","arraySlice","arrayToString","arrayToLocaleString","toLocaleString","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","$map","allocate","LITTLE_ENDIAN","FORCED_SET","toOffset","BYTES","validate","speciesFromList","fromList","addGetter","internal","$from","mapfn","mapping","$of","TO_LOCALE_BUG","$toLocaleString","copyWithin","every","find","predicate","findIndex","searchElement","includes","separator","reverse","middle","some","comparefn","$begin","BYTES_PER_ELEMENT","$slice","$set","arrayLike","isTAIndex","$getDesc","$setDesc","desc","$TypedArrayPrototype$","wrapper","CLAMPED","GETTER","SETTER","TAC","TypedArrayPrototype","addElement","setter","$offset","$length","klass","$len","$nativeIterator","CORRECT_ITER_NAME","$iterator","of","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","LN2","unpackIEEE754","nBits","unpackI32","packI8","packI16","packI32","packF64","packF32","PROTOTYPE","intIndex","$LENGTH","WRONG_INDEX","$BUFFER","_b","$OFFSET","pack","conversion","BaseBuffer","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","getUint8","getInt16","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","original","UNSCOPABLES","to","inc","isFinite","$at","point","TO_STRING","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","forOf","microtask","newPromiseCapabilityModule","perform","promiseResolve","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","_c","_v","ok","reaction","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","executor","onFulfilled","onRejected","remaining","$index","alreadyCalled","race","ret","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","createTextNode","observe","characterData","finally","onFinally","try","InternalMap","each","weak","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","gOPS","$assign","getSymbols","isEnum","getOwnPropertySymbols","$has","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","setPrototypeOf","buggy","__proto__","COLLECTION","mapFn","nextItem","isReadableStreamSupported","_typeof2","IsPropertyKey","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","ValidateAndNormalizeQueuingStrategy","AssertionError","rethrowAssertionErrorRejection","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","IsWritableStream","IsWritableStreamLocked","_writer","WritableStreamAbort","_state","_storedError","_pendingAbortRequest","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamDealWithRejection","WritableStreamFinishErroring","_writableStreamController","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","_writeRequests","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightClose","_inFlightCloseRequest","_closedPromise_resolve","_closedPromise_reject","_closedPromiseState","defaultWriterClosedPromiseResolve","WritableStreamCloseQueuedOrInFlight","_closeRequest","_inFlightWriteRequest","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_backpressure","_readyPromise_resolve","_readyPromise_reject","_readyPromise","_readyPromiseState","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","IsWritableStreamDefaultWriter","WritableStreamDefaultWriterClose","_ownerWritableStream","closeRequest","EnqueueValueWithSize","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultControllerClose","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultWriterRelease","releasedError","WritableStreamDefaultWriterWrite","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","defaultWriterLockException","writeRequest","WritableStreamAddWriteRequest","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","WritableStreamDefaultControllerGetDesiredSize","_strategyHWM","_queueTotalSize","_queue","PeekQueueValue","WritableStreamMarkCloseRequestInFlight","DequeueValue","_underlyingSink","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","WritableStreamDefaultControllerError","streamBrandCheckException","defaultWriterBrandCheckException","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterReadyPromiseInitializeAsResolved","_require","_require2","_require3","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","WritableStreamDefaultController","__startSteps","WritableStreamDefaultWriterCloseWithErrorPropagation","defaultWriterReadyPromiseInitialize","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterGetDesiredSize","normalizedStrategy","IsWritableStreamDefaultController","startResult","container","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","IsReadableStream","IsReadableStreamLocked","ReadableStreamTee","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","_branch1","branch2","_branch2","_teeState","ReadableStreamDefaultReaderRead","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","create_ReadableStreamTeePullFunction","_cloneForBranch2","cancel1","compositeReason","cancelResult","ReadableStreamCancel","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","_readableStreamController","ReadableStreamDefaultControllerError","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","_disturbed","ReadableStreamClose","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","ReadableStreamReaderGenericInitialize","_ownerReadableStream","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","ReadableStreamReaderGenericCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseResetToRejected","ReadableStreamBYOBReaderRead","_controlledReadableStream","elementSize","ctor","pullIntoDescriptor","bytesFilled","readerType","_pendingPullIntos","emptyView","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_closeRequested","ReadableByteStreamControllerError","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerPullInto","__pullSteps","IsReadableStreamDefaultController","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerShouldCallPull","_pulling","_pullAgain","_underlyingSource","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableByteStreamController","IsReadableStreamBYOBRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","_byobRequest","_associatedReadableByteStreamController","_view","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInternal","bytesWritten","firstDescriptor","ReadableByteStreamControllerRespondInClosedState","remainderSize","ReadableByteStreamControllerRespondInReadableState","readerLockException","defaultReaderBrandCheckException","byobReaderBrandCheckException","defaultControllerBrandCheckException","byobRequestBrandCheckException","byteStreamControllerBrandCheckException","_require4","_require5","underlyingSource","ReadableByteStreamController","ReadableStreamDefaultController","ReadableStreamBYOBReader","AcquireReadableStreamBYOBReader","readable","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","pipeLoop","waitForWritesToFinish","oldCurrentWrite","isOrBecomesErrored","shutdownWithAction","originalIsError","doTheRest","newError","shutdown","isError","isOrBecomesClosed","destClosed","branches","IsReadableStreamDisturbed","isView","pendingPromise","ReadableStreamBYOBRequest","ReadableByteStreamControllerRespond","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","autoAllocateChunkSize","_autoAllocateChunkSize","ReadableByteStreamControllerClose","transferredBuffer","ReadableByteStreamControllerEnqueue","viewE","bufferE","transformStream","writableStream","TransformStream","TransformStreamEnqueueToReadable","_errored","_readableClosed","_readableController","TransformStreamErrorIfNeeded","TransformStreamSetBackpressure","TransformStreamCloseReadableInternal","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","_transforming","transformer","_transformer","_transformStreamController","TransformStreamTransform","TransformStreamSource","TransformStreamDefaultController","TransformStreamCloseReadable","TransformStreamError","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","PDFDocument","ensureHelper","Page","_obj","_evaluator","_annotation","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","LETTER_SIZE_MEDIABOX","getPageProp","getInheritedPageProp","valueArray","mediaBox","cropBox","intersection","getContentStream","loadResources","contentStreamPromise","partialEvaluator","pageListPromise","contentStream","transparency","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","needle","backwards","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","JpegError","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","nextByte","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","dctZigZag","decodeMcu","mcu","mcuCol","mcusPerLine","decodeBlock","successiveACNextValue","decodeFn","progressive","startOffset","eobrun","successiveACState","componentsLength","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSin6","dctCos6","dctSqrt1d2","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_ccitt","ccittFaxDecoder","CCITTFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","readNextChar","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","pixel","row1","row2","decodeBitmapTemplate0","useskip","template","CodingTemplates","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","decodeRefinement","referenceBitmap","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","stripT","firstS","currentS","symbolId","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","symbols","newSymbols","currentHeight","currentWidth","deltaWidth","numberOfInstances","rdx","rdy","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","onImmediateLosslessTextRegion","onPatternDictionary","collectiveBitmap","patternBitmap","xMin","xMax","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","parseJbig2Chunks","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","MAX_NUM_SIZE","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","adjustWidths","recoverGlyphName","type1FontGlyphMapping","builtInEncoding","glyphNames","glyphId","charCodeToGlyphId","standardGlyphName","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","ID","FontRendererFactory","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","unicodeCharCode","readTableEntry","previousPosition","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","writeSignedInt16","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","flag","xyLength","repeat","glyphDataLength","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","TTOpsStackDeltas","foldTTTable","sanitizeTTPrograms","fpgm","prep","cvt","maxFunctionDefs","checkInvalidFunctions","cvtData","hasGlyph","cffFile","VALID_TABLES","ttf","entrySelector","readOpenTypeHeader","isTrueType","maxSizeOfInstructions","dupFirstEntry","numOfMetrics","numMissing","sanitizeMetrics","locaLength","int32","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNameIndexes","customNames","stringLength","readPostScriptTable","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","firstCode","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","numRecords","stringsStart","records","platform","language","record","readNameTable","builder","tableTag","getCharCodes","charCodes","createCharCode","adjustToUnicode","getGlyphMapping","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","getHeaderBlock","Type1Parser","extractFontHeader","eexecBlock","eexecBytes","getEexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","lookupCmap","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","bezierCurveTo","xb","yb","subrCode","stackClean","stems","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","compileGlyph","compileGlyphImpl","parseGlyfTable","Type1CharString","lsb","flexing","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","isHexDigit","discardNumber","decrypted","isSpecial","isBinary","EEXEC_ENCRYPT_KEY","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","buildFigureFromPatch","mesh","figure","figures","coords","pi","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","getB","bCol","newColor","updateBounds","maxY","bitsPerCoordinate","bitsPerFlag","patchMesh","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xi","yi","lut","t_","buildB","xstep","ystep","paintType","tilingType","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","baseTypes","arabicTypes","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$nativeDecoder","imagePromise","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","maybeUndoPreblend","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","AnnotationBorderStyle","Annotation","_get","receiver","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","getTransformMatrix","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","_preparePopup","_Annotation3","_Annotation4","parentItem","parentSubtype","parentType","parentFlags","_Annotation5","lineCoordinates","_Annotation6","_Annotation7","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","cachedClearTimeout","runClearTimeout","Item","noop","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","eval"],"mappings":"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ACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACA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AA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAA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","file":"1f0bb0e663973b13feda.worker.js","sourcesContent":[" \tvar parentHotUpdateCallback = this[\"webpackHotUpdate\"];\n \tthis[\"webpackHotUpdate\"] = function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\n \t\timportScripts(__webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\");\n \t}\n\n \tfunction hotDownloadManifest(requestTimeout) { // eslint-disable-line no-unused-vars\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif(typeof XMLHttpRequest === \"undefined\")\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch(err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif(request.readyState !== 4) return;\n \t\t\t\tif(request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\n \t\t\t\t} else if(request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if(request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch(e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tfunction hotDisposeChunk(chunkId) { //eslint-disable-line no-unused-vars\n \t\tdelete installedChunks[chunkId];\n \t}\n\n \t\r\n \t\r\n \tvar hotApplyOnUpdate = true;\r\n \tvar hotCurrentHash = \"1f0bb0e663973b13feda\"; // eslint-disable-line no-unused-vars\r\n \tvar hotRequestTimeout = 10000;\r\n \tvar hotCurrentModuleData = {};\r\n \tvar hotCurrentChildModule; // eslint-disable-line no-unused-vars\r\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n \tvar hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars\r\n \t\r\n \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar me = installedModules[moduleId];\r\n \t\tif(!me) return __webpack_require__;\r\n \t\tvar fn = function(request) {\r\n \t\t\tif(me.hot.active) {\r\n \t\t\t\tif(installedModules[request]) {\r\n \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n \t\t\t\t} else {\r\n \t\t\t\t\thotCurrentParents = [moduleId];\r\n \t\t\t\t\thotCurrentChildModule = request;\r\n \t\t\t\t}\r\n \t\t\t\tif(me.children.indexOf(request) < 0)\r\n \t\t\t\t\tme.children.push(request);\r\n \t\t\t} else {\r\n \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n \t\t\t\thotCurrentParents = [];\r\n \t\t\t}\r\n \t\t\treturn __webpack_require__(request);\r\n \t\t};\r\n \t\tvar ObjectFactory = function ObjectFactory(name) {\r\n \t\t\treturn {\r\n \t\t\t\tconfigurable: true,\r\n \t\t\t\tenumerable: true,\r\n \t\t\t\tget: function() {\r\n \t\t\t\t\treturn __webpack_require__[name];\r\n \t\t\t\t},\r\n \t\t\t\tset: function(value) {\r\n \t\t\t\t\t__webpack_require__[name] = value;\r\n \t\t\t\t}\r\n \t\t\t};\r\n \t\t};\r\n \t\tfor(var name in __webpack_require__) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name) && name !== \"e\") {\r\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\r\n \t\t\t}\r\n \t\t}\r\n \t\tfn.e = function(chunkId) {\r\n \t\t\tif(hotStatus === \"ready\")\r\n \t\t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotChunksLoading++;\r\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\r\n \t\t\t\tfinishChunkLoading();\r\n \t\t\t\tthrow err;\r\n \t\t\t});\r\n \t\r\n \t\t\tfunction finishChunkLoading() {\r\n \t\t\t\thotChunksLoading--;\r\n \t\t\t\tif(hotStatus === \"prepare\") {\r\n \t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\t\t\thotUpdateDownloaded();\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t};\r\n \t\treturn fn;\r\n \t}\r\n \t\r\n \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar hot = {\r\n \t\t\t// private stuff\r\n \t\t\t_acceptedDependencies: {},\r\n \t\t\t_declinedDependencies: {},\r\n \t\t\t_selfAccepted: false,\r\n \t\t\t_selfDeclined: false,\r\n \t\t\t_disposeHandlers: [],\r\n \t\t\t_main: hotCurrentChildModule !== moduleId,\r\n \t\r\n \t\t\t// Module API\r\n \t\t\tactive: true,\r\n \t\t\taccept: function(dep, callback) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfAccepted = true;\r\n \t\t\t\telse if(typeof dep === \"function\")\r\n \t\t\t\t\thot._selfAccepted = dep;\r\n \t\t\t\telse if(typeof dep === \"object\")\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\r\n \t\t\t\telse\r\n \t\t\t\t\thot._acceptedDependencies[dep] = callback || function() {};\r\n \t\t\t},\r\n \t\t\tdecline: function(dep) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfDeclined = true;\r\n \t\t\t\telse if(typeof dep === \"object\")\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n \t\t\t\telse\r\n \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n \t\t\t},\r\n \t\t\tdispose: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\taddDisposeHandler: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\tremoveDisposeHandler: function(callback) {\r\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t// Management API\r\n \t\t\tcheck: hotCheck,\r\n \t\t\tapply: hotApply,\r\n \t\t\tstatus: function(l) {\r\n \t\t\t\tif(!l) return hotStatus;\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\taddStatusHandler: function(l) {\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\tremoveStatusHandler: function(l) {\r\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t//inherit from previous dispose call\r\n \t\t\tdata: hotCurrentModuleData[moduleId]\r\n \t\t};\r\n \t\thotCurrentChildModule = undefined;\r\n \t\treturn hot;\r\n \t}\r\n \t\r\n \tvar hotStatusHandlers = [];\r\n \tvar hotStatus = \"idle\";\r\n \t\r\n \tfunction hotSetStatus(newStatus) {\r\n \t\thotStatus = newStatus;\r\n \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n \t}\r\n \t\r\n \t// while downloading\r\n \tvar hotWaitingFiles = 0;\r\n \tvar hotChunksLoading = 0;\r\n \tvar hotWaitingFilesMap = {};\r\n \tvar hotRequestedFilesMap = {};\r\n \tvar hotAvailableFilesMap = {};\r\n \tvar hotDeferred;\r\n \t\r\n \t// The update info\r\n \tvar hotUpdate, hotUpdateNewHash;\r\n \t\r\n \tfunction toModuleId(id) {\r\n \t\tvar isNumber = (+id) + \"\" === id;\r\n \t\treturn isNumber ? +id : id;\r\n \t}\r\n \t\r\n \tfunction hotCheck(apply) {\r\n \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n \t\thotApplyOnUpdate = apply;\r\n \t\thotSetStatus(\"check\");\r\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\r\n \t\t\tif(!update) {\r\n \t\t\t\thotSetStatus(\"idle\");\r\n \t\t\t\treturn null;\r\n \t\t\t}\r\n \t\t\thotRequestedFilesMap = {};\r\n \t\t\thotWaitingFilesMap = {};\r\n \t\t\thotAvailableFilesMap = update.c;\r\n \t\t\thotUpdateNewHash = update.h;\r\n \t\r\n \t\t\thotSetStatus(\"prepare\");\r\n \t\t\tvar promise = new Promise(function(resolve, reject) {\r\n \t\t\t\thotDeferred = {\r\n \t\t\t\t\tresolve: resolve,\r\n \t\t\t\t\treject: reject\r\n \t\t\t\t};\r\n \t\t\t});\r\n \t\t\thotUpdate = {};\r\n \t\t\tvar chunkId = 0;\r\n \t\t\t{ // eslint-disable-line no-lone-blocks\r\n \t\t\t\t/*globals chunkId */\r\n \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t}\r\n \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\thotUpdateDownloaded();\r\n \t\t\t}\r\n \t\t\treturn promise;\r\n \t\t});\r\n \t}\r\n \t\r\n \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\tif(!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n \t\t\treturn;\r\n \t\thotRequestedFilesMap[chunkId] = false;\r\n \t\tfor(var moduleId in moreModules) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n \t\t\thotUpdateDownloaded();\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotEnsureUpdateChunk(chunkId) {\r\n \t\tif(!hotAvailableFilesMap[chunkId]) {\r\n \t\t\thotWaitingFilesMap[chunkId] = true;\r\n \t\t} else {\r\n \t\t\thotRequestedFilesMap[chunkId] = true;\r\n \t\t\thotWaitingFiles++;\r\n \t\t\thotDownloadUpdateChunk(chunkId);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotUpdateDownloaded() {\r\n \t\thotSetStatus(\"ready\");\r\n \t\tvar deferred = hotDeferred;\r\n \t\thotDeferred = null;\r\n \t\tif(!deferred) return;\r\n \t\tif(hotApplyOnUpdate) {\r\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\r\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\r\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\r\n \t\t\tPromise.resolve().then(function() {\r\n \t\t\t\treturn hotApply(hotApplyOnUpdate);\r\n \t\t\t}).then(\r\n \t\t\t\tfunction(result) {\r\n \t\t\t\t\tdeferred.resolve(result);\r\n \t\t\t\t},\r\n \t\t\t\tfunction(err) {\r\n \t\t\t\t\tdeferred.reject(err);\r\n \t\t\t\t}\r\n \t\t\t);\r\n \t\t} else {\r\n \t\t\tvar outdatedModules = [];\r\n \t\t\tfor(var id in hotUpdate) {\r\n \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tdeferred.resolve(outdatedModules);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotApply(options) {\r\n \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n \t\toptions = options || {};\r\n \t\r\n \t\tvar cb;\r\n \t\tvar i;\r\n \t\tvar j;\r\n \t\tvar module;\r\n \t\tvar moduleId;\r\n \t\r\n \t\tfunction getAffectedStuff(updateModuleId) {\r\n \t\t\tvar outdatedModules = [updateModuleId];\r\n \t\t\tvar outdatedDependencies = {};\r\n \t\r\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\r\n \t\t\t\treturn {\r\n \t\t\t\t\tchain: [id],\r\n \t\t\t\t\tid: id\r\n \t\t\t\t};\r\n \t\t\t});\r\n \t\t\twhile(queue.length > 0) {\r\n \t\t\t\tvar queueItem = queue.pop();\r\n \t\t\t\tvar moduleId = queueItem.id;\r\n \t\t\t\tvar chain = queueItem.chain;\r\n \t\t\t\tmodule = installedModules[moduleId];\r\n \t\t\t\tif(!module || module.hot._selfAccepted)\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\tif(module.hot._selfDeclined) {\r\n \t\t\t\t\treturn {\r\n \t\t\t\t\t\ttype: \"self-declined\",\r\n \t\t\t\t\t\tchain: chain,\r\n \t\t\t\t\t\tmoduleId: moduleId\r\n \t\t\t\t\t};\r\n \t\t\t\t}\r\n \t\t\t\tif(module.hot._main) {\r\n \t\t\t\t\treturn {\r\n \t\t\t\t\t\ttype: \"unaccepted\",\r\n \t\t\t\t\t\tchain: chain,\r\n \t\t\t\t\t\tmoduleId: moduleId\r\n \t\t\t\t\t};\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n \t\t\t\t\tvar parentId = module.parents[i];\r\n \t\t\t\t\tvar parent = installedModules[parentId];\r\n \t\t\t\t\tif(!parent) continue;\r\n \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n \t\t\t\t\t\treturn {\r\n \t\t\t\t\t\t\ttype: \"declined\",\r\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\r\n \t\t\t\t\t\t\tmoduleId: moduleId,\r\n \t\t\t\t\t\t\tparentId: parentId\r\n \t\t\t\t\t\t};\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n \t\t\t\t\toutdatedModules.push(parentId);\r\n \t\t\t\t\tqueue.push({\r\n \t\t\t\t\t\tchain: chain.concat([parentId]),\r\n \t\t\t\t\t\tid: parentId\r\n \t\t\t\t\t});\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\r\n \t\t\treturn {\r\n \t\t\t\ttype: \"accepted\",\r\n \t\t\t\tmoduleId: updateModuleId,\r\n \t\t\t\toutdatedModules: outdatedModules,\r\n \t\t\t\toutdatedDependencies: outdatedDependencies\r\n \t\t\t};\r\n \t\t}\r\n \t\r\n \t\tfunction addAllToSet(a, b) {\r\n \t\t\tfor(var i = 0; i < b.length; i++) {\r\n \t\t\t\tvar item = b[i];\r\n \t\t\t\tif(a.indexOf(item) < 0)\r\n \t\t\t\t\ta.push(item);\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// at begin all updates modules are outdated\r\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n \t\tvar outdatedDependencies = {};\r\n \t\tvar outdatedModules = [];\r\n \t\tvar appliedUpdate = {};\r\n \t\r\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\r\n \t\t\tconsole.warn(\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\");\r\n \t\t};\r\n \t\r\n \t\tfor(var id in hotUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\tmoduleId = toModuleId(id);\r\n \t\t\t\tvar result;\r\n \t\t\t\tif(hotUpdate[id]) {\r\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tresult = {\r\n \t\t\t\t\t\ttype: \"disposed\",\r\n \t\t\t\t\t\tmoduleId: id\r\n \t\t\t\t\t};\r\n \t\t\t\t}\r\n \t\t\t\tvar abortError = false;\r\n \t\t\t\tvar doApply = false;\r\n \t\t\t\tvar doDispose = false;\r\n \t\t\t\tvar chainInfo = \"\";\r\n \t\t\t\tif(result.chain) {\r\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\r\n \t\t\t\t}\r\n \t\t\t\tswitch(result.type) {\r\n \t\t\t\t\tcase \"self-declined\":\r\n \t\t\t\t\t\tif(options.onDeclined)\r\n \t\t\t\t\t\t\toptions.onDeclined(result);\r\n \t\t\t\t\t\tif(!options.ignoreDeclined)\r\n \t\t\t\t\t\t\tabortError = new Error(\"Aborted because of self decline: \" + result.moduleId + chainInfo);\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase \"declined\":\r\n \t\t\t\t\t\tif(options.onDeclined)\r\n \t\t\t\t\t\t\toptions.onDeclined(result);\r\n \t\t\t\t\t\tif(!options.ignoreDeclined)\r\n \t\t\t\t\t\t\tabortError = new Error(\"Aborted because of declined dependency: \" + result.moduleId + \" in \" + result.parentId + chainInfo);\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase \"unaccepted\":\r\n \t\t\t\t\t\tif(options.onUnaccepted)\r\n \t\t\t\t\t\t\toptions.onUnaccepted(result);\r\n \t\t\t\t\t\tif(!options.ignoreUnaccepted)\r\n \t\t\t\t\t\t\tabortError = new Error(\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo);\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase \"accepted\":\r\n \t\t\t\t\t\tif(options.onAccepted)\r\n \t\t\t\t\t\t\toptions.onAccepted(result);\r\n \t\t\t\t\t\tdoApply = true;\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase \"disposed\":\r\n \t\t\t\t\t\tif(options.onDisposed)\r\n \t\t\t\t\t\t\toptions.onDisposed(result);\r\n \t\t\t\t\t\tdoDispose = true;\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tdefault:\r\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\r\n \t\t\t\t}\r\n \t\t\t\tif(abortError) {\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn Promise.reject(abortError);\r\n \t\t\t\t}\r\n \t\t\t\tif(doApply) {\r\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\r\n \t\t\t\t\tfor(moduleId in result.outdatedDependencies) {\r\n \t\t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result.outdatedDependencies, moduleId)) {\r\n \t\t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n \t\t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result.outdatedDependencies[moduleId]);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tif(doDispose) {\r\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\r\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Store self accepted outdated modules to require them later by the module system\r\n \t\tvar outdatedSelfAcceptedModules = [];\r\n \t\tfor(i = 0; i < outdatedModules.length; i++) {\r\n \t\t\tmoduleId = outdatedModules[i];\r\n \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n \t\t\t\toutdatedSelfAcceptedModules.push({\r\n \t\t\t\t\tmodule: moduleId,\r\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n \t\t\t\t});\r\n \t\t}\r\n \t\r\n \t\t// Now in \"dispose\" phase\r\n \t\thotSetStatus(\"dispose\");\r\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\r\n \t\t\tif(hotAvailableFilesMap[chunkId] === false) {\r\n \t\t\t\thotDisposeChunk(chunkId);\r\n \t\t\t}\r\n \t\t});\r\n \t\r\n \t\tvar idx;\r\n \t\tvar queue = outdatedModules.slice();\r\n \t\twhile(queue.length > 0) {\r\n \t\t\tmoduleId = queue.pop();\r\n \t\t\tmodule = installedModules[moduleId];\r\n \t\t\tif(!module) continue;\r\n \t\r\n \t\t\tvar data = {};\r\n \t\r\n \t\t\t// Call dispose handlers\r\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n \t\t\tfor(j = 0; j < disposeHandlers.length; j++) {\r\n \t\t\t\tcb = disposeHandlers[j];\r\n \t\t\t\tcb(data);\r\n \t\t\t}\r\n \t\t\thotCurrentModuleData[moduleId] = data;\r\n \t\r\n \t\t\t// disable module (this disables requires from this module)\r\n \t\t\tmodule.hot.active = false;\r\n \t\r\n \t\t\t// remove module from cache\r\n \t\t\tdelete installedModules[moduleId];\r\n \t\r\n \t\t\t// when disposing there is no need to call dispose handler\r\n \t\t\tdelete outdatedDependencies[moduleId];\r\n \t\r\n \t\t\t// remove \"parents\" references from all children\r\n \t\t\tfor(j = 0; j < module.children.length; j++) {\r\n \t\t\t\tvar child = installedModules[module.children[j]];\r\n \t\t\t\tif(!child) continue;\r\n \t\t\t\tidx = child.parents.indexOf(moduleId);\r\n \t\t\t\tif(idx >= 0) {\r\n \t\t\t\t\tchild.parents.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// remove outdated dependency from module children\r\n \t\tvar dependency;\r\n \t\tvar moduleOutdatedDependencies;\r\n \t\tfor(moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tmodule = installedModules[moduleId];\r\n \t\t\t\tif(module) {\r\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\t\tfor(j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\r\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\r\n \t\t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Not in \"apply\" phase\r\n \t\thotSetStatus(\"apply\");\r\n \t\r\n \t\thotCurrentHash = hotUpdateNewHash;\r\n \t\r\n \t\t// insert new code\r\n \t\tfor(moduleId in appliedUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// call accept handlers\r\n \t\tvar error = null;\r\n \t\tfor(moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tmodule = installedModules[moduleId];\r\n \t\t\t\tif(module) {\r\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\t\tvar callbacks = [];\r\n \t\t\t\t\tfor(i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\r\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\r\n \t\t\t\t\t\tif(cb) {\r\n \t\t\t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n \t\t\t\t\t\t\tcallbacks.push(cb);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tfor(i = 0; i < callbacks.length; i++) {\r\n \t\t\t\t\t\tcb = callbacks[i];\r\n \t\t\t\t\t\ttry {\r\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\r\n \t\t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\t\tif(options.onErrored) {\r\n \t\t\t\t\t\t\t\toptions.onErrored({\r\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\r\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\r\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\r\n \t\t\t\t\t\t\t\t\terror: err\r\n \t\t\t\t\t\t\t\t});\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tif(!options.ignoreErrored) {\r\n \t\t\t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Load self accepted modules\r\n \t\tfor(i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n \t\t\tmoduleId = item.module;\r\n \t\t\thotCurrentParents = [moduleId];\r\n \t\t\ttry {\r\n \t\t\t\t__webpack_require__(moduleId);\r\n \t\t\t} catch(err) {\r\n \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\titem.errorHandler(err);\r\n \t\t\t\t\t} catch(err2) {\r\n \t\t\t\t\t\tif(options.onErrored) {\r\n \t\t\t\t\t\t\toptions.onErrored({\r\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\r\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\r\n \t\t\t\t\t\t\t\terror: err2,\r\n \t\t\t\t\t\t\t\torginalError: err, // TODO remove in webpack 4\r\n \t\t\t\t\t\t\t\toriginalError: err\r\n \t\t\t\t\t\t\t});\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif(!options.ignoreErrored) {\r\n \t\t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\t\terror = err2;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t} else {\r\n \t\t\t\t\tif(options.onErrored) {\r\n \t\t\t\t\t\toptions.onErrored({\r\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\r\n \t\t\t\t\t\t\tmoduleId: moduleId,\r\n \t\t\t\t\t\t\terror: err\r\n \t\t\t\t\t\t});\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(!options.ignoreErrored) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// handle errors in accept handlers and self accepted module load\r\n \t\tif(error) {\r\n \t\t\thotSetStatus(\"fail\");\r\n \t\t\treturn Promise.reject(error);\r\n \t\t}\r\n \t\r\n \t\thotSetStatus(\"idle\");\r\n \t\treturn new Promise(function(resolve) {\r\n \t\t\tresolve(outdatedModules);\r\n \t\t});\r\n \t}\r\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1f0bb0e663973b13feda","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 82);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isNodeJS = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.StatTimer = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(84);\n\nvar _streams_polyfill = __w_pdfjs_require__(124);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n  verbosity = level;\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  var n = 1,\n      i = 0;\n  while (x > n) {\n    n <<= 1;\n    i++;\n  }\n  return i;\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return getArray ? dict.getArray(name) : dict.get(name);\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar StatTimer = function StatTimerClosure() {\n  function rpad(str, pad, length) {\n    while (str.length < length) {\n      str += pad;\n    }\n    return str;\n  }\n  function StatTimer() {\n    this.started = Object.create(null);\n    this.times = [];\n    this.enabled = true;\n  }\n  StatTimer.prototype = {\n    time: function StatTimer_time(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (name in this.started) {\n        warn('Timer is already running for ' + name);\n      }\n      this.started[name] = Date.now();\n    },\n    timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (!(name in this.started)) {\n        warn('Timer has not been started for ' + name);\n      }\n      this.times.push({\n        'name': name,\n        'start': this.started[name],\n        'end': Date.now()\n      });\n      delete this.started[name];\n    },\n    toString: function StatTimer_toString() {\n      var i, ii;\n      var times = this.times;\n      var out = '';\n      var longest = 0;\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var name = times[i]['name'];\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var span = times[i];\n        var duration = span.end - span.start;\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n    }\n  };\n  return StatTimer;\n}();\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref) {\n      var stream = _ref.stream,\n          chunk = _ref.chunk,\n          transfers = _ref.transfers,\n          success = _ref.success,\n          reason = _ref.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\n      var stream = _ref2.stream,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  };\n  img.onerror = function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  };\n  img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StatTimer = StatTimer;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isNodeJS = isNodeJS;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(54)('wks');\nvar uid = __w_pdfjs_require__(17);\nvar _Symbol = __w_pdfjs_require__(1).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.JpxStream = exports.JpegStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _jpg = __w_pdfjs_require__(128);\n\nvar _jpx = __w_pdfjs_require__(74);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n    this.ensureBuffer();\n    return this.buffer;\n  };\n  JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.JpegStream = JpegStream;\nexports.JpxStream = JpxStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(8);\nvar redefine = __w_pdfjs_require__(16);\nvar ctx = __w_pdfjs_require__(13);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar createDesc = __w_pdfjs_require__(29);\nmodule.exports = __w_pdfjs_require__(11) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(12)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(21);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\nvar toPrimitive = __w_pdfjs_require__(36);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(11) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar has = __w_pdfjs_require__(10);\nvar SRC = __w_pdfjs_require__(17)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(16);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(15).f;\nvar has = __w_pdfjs_require__(10);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    throw new Error('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      throw new Error('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      throw new Error('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      throw new Error('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref, res, pdfFunctionFactory) {\n    if ((0, _primitives.isName)(cs)) {\n      var colorSpaces = res.get('ColorSpace');\n      if ((0, _primitives.isDict)(colorSpaces)) {\n        var refcs = colorSpaces.get(cs.name);\n        if (refcs) {\n          cs = refcs;\n        }\n      }\n    }\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall'];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt'];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191'];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(37);\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(24);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar call = __w_pdfjs_require__(107);\nvar isArrayIter = __w_pdfjs_require__(56);\nvar anObject = __w_pdfjs_require__(9);\nvar toLength = __w_pdfjs_require__(14);\nvar getIterFn = __w_pdfjs_require__(60);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ccitt_stream = __w_pdfjs_require__(129);\n\nvar _jbig2_stream = __w_pdfjs_require__(131);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream(stream);\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream(stream);\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(1).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(24);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(54)('keys');\nvar uid = __w_pdfjs_require__(17);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(52);\nvar enumBugKeys = __w_pdfjs_require__(40);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar IObject = __w_pdfjs_require__(37);\nvar toObject = __w_pdfjs_require__(19);\nvar toLength = __w_pdfjs_require__(14);\nvar asc = __w_pdfjs_require__(91);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar aFunction = __w_pdfjs_require__(21);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(21);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(17)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(10);\nvar setDesc = __w_pdfjs_require__(15).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(12)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(11) && !__w_pdfjs_require__(12)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(35)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar uid = __w_pdfjs_require__(17);\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\nvar TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(52);\nvar hiddenKeys = __w_pdfjs_require__(40).concat('length', 'prototype');\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toIObject = __w_pdfjs_require__(30);\nvar arrayIndexOf = __w_pdfjs_require__(53)(false);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(30);\nvar toLength = __w_pdfjs_require__(14);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toObject = __w_pdfjs_require__(19);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = function fill(value) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) {\n    O[index++] = value;\n  }return O;\n};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(20);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar dPs = __w_pdfjs_require__(90);\nvar enumBugKeys = __w_pdfjs_require__(40);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(35)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(58).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(1).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toObject = __w_pdfjs_require__(19);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(32);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar Iterators = __w_pdfjs_require__(20);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(94);\nvar step = __w_pdfjs_require__(95);\nvar Iterators = __w_pdfjs_require__(20);\nvar toIObject = __w_pdfjs_require__(30);\nmodule.exports = __w_pdfjs_require__(62)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(28);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(16);\nvar hide = __w_pdfjs_require__(8);\nvar has = __w_pdfjs_require__(10);\nvar Iterators = __w_pdfjs_require__(20);\nvar $iterCreate = __w_pdfjs_require__(96);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar getPrototypeOf = __w_pdfjs_require__(59);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar dP = __w_pdfjs_require__(15);\nvar DESCRIPTORS = __w_pdfjs_require__(11);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(65);\nvar createDesc = __w_pdfjs_require__(29);\nvar toIObject = __w_pdfjs_require__(30);\nvar toPrimitive = __w_pdfjs_require__(36);\nvar has = __w_pdfjs_require__(10);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(11) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(32);\nvar test = {};\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(16)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(61);\nvar getKeys = __w_pdfjs_require__(41);\nvar redefine = __w_pdfjs_require__(16);\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar Iterators = __w_pdfjs_require__(20);\nvar wks = __w_pdfjs_require__(4);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar invoke = __w_pdfjs_require__(108);\nvar html = __w_pdfjs_require__(58);\nvar cel = __w_pdfjs_require__(35);\nvar global = __w_pdfjs_require__(1);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(24)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(45);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _chunked_stream = __w_pdfjs_require__(72);\n\nvar _crypto = __w_pdfjs_require__(76);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = [];\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    throw new Error('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 1]\n                };\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        var t1 = result[j - 3],\n            t2 = result[j - 2],\n            t3 = result[j - 1],\n            t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = exports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _fonts = __w_pdfjs_require__(134);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar _unicode = __w_pdfjs_require__(80);\n\nvar _standard_fonts = __w_pdfjs_require__(79);\n\nvar _pattern = __w_pdfjs_require__(138);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _bidi = __w_pdfjs_require__(139);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _metrics = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(81);\n\nvar _murmurhash = __w_pdfjs_require__(142);\n\nvar _image = __w_pdfjs_require__(143);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _stream.JpegStream || mask instanceof _stream.JpegStream || softMask instanceof _stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        return Promise.resolve(properties.toUnicode);\n      }\n      var toUnicode, charcode, glyphName;\n      if (!properties.composite) {\n        toUnicode = [];\n        var encoding = properties.defaultEncoding.slice();\n        var baseEncodingName = properties.baseEncodingName;\n        var differences = properties.differences;\n        for (charcode in differences) {\n          glyphName = differences[charcode];\n          if (glyphName === '.notdef') {\n            continue;\n          }\n          encoding[charcode] = glyphName;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        for (charcode in encoding) {\n          glyphName = encoding[charcode];\n          if (glyphName === '') {\n            continue;\n          } else if (glyphsUnicodeMap[glyphName] === undefined) {\n            var code = 0;\n            switch (glyphName[0]) {\n              case 'G':\n                if (glyphName.length === 3) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'g':\n                if (glyphName.length === 5) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'C':\n              case 'c':\n                if (glyphName.length >= 3) {\n                  code = +glyphName.substr(1);\n                }\n                break;\n              default:\n                var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n                if (unicode !== -1) {\n                  code = unicode;\n                }\n            }\n            if (code) {\n              if (baseEncodingName && code === +charcode) {\n                var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                  toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                  continue;\n                }\n              }\n              toUnicode[charcode] = String.fromCharCode(code);\n            }\n            continue;\n          }\n          toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n        }\n        return Promise.resolve(new _fonts.ToUnicodeMap(toUnicode));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.fnArray.push(fn);\n      this.argsArray.push(args);\n      if (this.messageHandler) {\n        if (this.fnArray.length >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      if (this.intent !== 'oplist') {\n        new QueueOptimizer().optimize(this);\n      }\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n    }\n  };\n  return OperatorList;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, fn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = fn;\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], function foundInlineImageGroup(context) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintInlineImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      i += 4;\n    }\n    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], function foundImageMaskGroup(context) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageMaskXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      i += 4;\n    }\n    var count = (i - iFirstSave) / 4;\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var iFirstRestore = curr;\n    if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n      return iFirstRestore + 1;\n    }\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n        break;\n      }\n      if (argsArray[i + 2][0] !== firstPIXOArg0) {\n        break;\n      }\n      i += 4;\n    }\n    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], function (context) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var i = iFirstBeginText + 5;\n    var ii = fnArray.length;\n    while (i + 4 < ii) {\n      if (fnArray[i] !== _util.OPS.beginText || fnArray[i + 1] !== _util.OPS.setFont || fnArray[i + 2] !== _util.OPS.setTextMatrix || fnArray[i + 3] !== _util.OPS.showText || fnArray[i + 4] !== _util.OPS.endText) {\n        break;\n      }\n      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n        break;\n      }\n      i += 5;\n    }\n    var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer() {}\n  QueueOptimizer.prototype = {\n    optimize: function QueueOptimizer_optimize(queue) {\n      var fnArray = queue.fnArray,\n          argsArray = queue.argsArray;\n      var context = {\n        iCurr: 0,\n        fnArray: fnArray,\n        argsArray: argsArray\n      };\n      var state;\n      var i = 0,\n          ii = fnArray.length;\n      while (i < ii) {\n        state = (state || InitialState)[fnArray[i]];\n        if (typeof state === 'function') {\n          context.iCurr = i;\n          i = state(context);\n          state = undefined;\n          ii = context.fnArray.length;\n        } else {\n          i++;\n        }\n      }\n    }\n  };\n  return QueueOptimizer;\n}();\nexports.OperatorList = OperatorList;\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(135);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ps_parser = __w_pdfjs_require__(141);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    throw new Error('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '1.10.97';\nvar pdfjsBuild = '7d0fce73';\nvar pdfjsCoreWorker = __w_pdfjs_require__(83);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(126);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '1.10.97';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        var numPagesPromise = pdfManager.ensureDoc('numPages');\n        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n        var encryptedPromise = pdfManager.ensureXRef('encrypt');\n        Promise.all([numPagesPromise, fingerprintPromise, encryptedPromise]).then(function onDocReady(results) {\n          var doc = {\n            numPages: results[0],\n            fingerprint: results[1],\n            encrypted: !!results[2]\n          };\n          loadDocumentCapability.resolve(doc);\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _util.isNodeJS)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n  var globalScope = __w_pdfjs_require__(85);\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n  var isAndroid = /Android/.test(userAgent);\n  var isAndroidPre3 = /Android\\s[0-2][^\\d]/.test(userAgent);\n  var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n  var isChrome = userAgent.indexOf('Chrom') >= 0;\n  var isChromeWithRangeBug = /Chrome\\/(39|40)\\./.test(userAgent);\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n  var isIE = userAgent.indexOf('Trident') >= 0;\n  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n  var isOpera = userAgent.indexOf('Opera') >= 0;\n  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  if (typeof PDFJS === 'undefined') {\n    globalScope.PDFJS = {};\n  }\n  PDFJS.compatibilityChecked = true;\n  (function checkTypedArrayCompatibility() {\n    if (typeof Uint8ClampedArray === 'undefined') {\n      globalScope.Uint8ClampedArray = __w_pdfjs_require__(86);\n    }\n    if (typeof Uint8Array !== 'undefined') {\n      if (typeof Uint8Array.prototype.subarray === 'undefined') {\n        Uint8Array.prototype.subarray = function subarray(start, end) {\n          return new Uint8Array(this.slice(start, end));\n        };\n        Float32Array.prototype.subarray = function subarray(start, end) {\n          return new Float32Array(this.slice(start, end));\n        };\n      }\n      if (typeof Float64Array === 'undefined') {\n        globalScope.Float64Array = Float32Array;\n      }\n      return;\n    }\n    function subarray(start, end) {\n      return new TypedArray(this.slice(start, end));\n    }\n    function setArrayOffset(array, offset) {\n      if (arguments.length < 2) {\n        offset = 0;\n      }\n      for (var i = 0, n = array.length; i < n; ++i, ++offset) {\n        this[offset] = array[i] & 0xFF;\n      }\n    }\n    function Uint32ArrayView(buffer, length) {\n      this.buffer = buffer;\n      this.byteLength = buffer.length;\n      this.length = length;\n      ensureUint32ArrayViewProps(this.length);\n    }\n    Uint32ArrayView.prototype = Object.create(null);\n    var uint32ArrayViewSetters = 0;\n    function createUint32ArrayProp(index) {\n      return {\n        get: function get() {\n          var buffer = this.buffer,\n              offset = index << 2;\n          return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n        },\n        set: function set(value) {\n          var buffer = this.buffer,\n              offset = index << 2;\n          buffer[offset] = value & 255;\n          buffer[offset + 1] = value >> 8 & 255;\n          buffer[offset + 2] = value >> 16 & 255;\n          buffer[offset + 3] = value >>> 24 & 255;\n        }\n      };\n    }\n    function ensureUint32ArrayViewProps(length) {\n      while (uint32ArrayViewSetters < length) {\n        Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n        uint32ArrayViewSetters++;\n      }\n    }\n    function TypedArray(arg1) {\n      var result, i, n;\n      if (typeof arg1 === 'number') {\n        result = [];\n        for (i = 0; i < arg1; ++i) {\n          result[i] = 0;\n        }\n      } else if ('slice' in arg1) {\n        result = arg1.slice(0);\n      } else {\n        result = [];\n        for (i = 0, n = arg1.length; i < n; ++i) {\n          result[i] = arg1[i];\n        }\n      }\n      result.subarray = subarray;\n      result.buffer = result;\n      result.byteLength = result.length;\n      result.set = setArrayOffset;\n      if ((typeof arg1 === 'undefined' ? 'undefined' : _typeof(arg1)) === 'object' && arg1.buffer) {\n        result.buffer = arg1.buffer;\n      }\n      return result;\n    }\n    globalScope.Uint8Array = TypedArray;\n    globalScope.Int8Array = TypedArray;\n    globalScope.Int32Array = TypedArray;\n    globalScope.Uint16Array = TypedArray;\n    globalScope.Float32Array = TypedArray;\n    globalScope.Float64Array = TypedArray;\n    globalScope.Uint32Array = function () {\n      if (arguments.length === 3) {\n        if (arguments[1] !== 0) {\n          throw new Error('offset !== 0 is not supported');\n        }\n        return new Uint32ArrayView(arguments[0], arguments[2]);\n      }\n      return TypedArray.apply(this, arguments);\n    };\n  })();\n  (function canvasPixelArrayBuffer() {\n    if (!hasDOM || !window.CanvasPixelArray) {\n      return;\n    }\n    var cpaProto = window.CanvasPixelArray.prototype;\n    if ('buffer' in cpaProto) {\n      return;\n    }\n    Object.defineProperty(cpaProto, 'buffer', {\n      get: function get() {\n        return this;\n      },\n\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(cpaProto, 'byteLength', {\n      get: function get() {\n        return this.length;\n      },\n\n      enumerable: false,\n      configurable: true\n    });\n  })();\n  (function normalizeURLObject() {\n    if (!globalScope.URL) {\n      globalScope.URL = globalScope.webkitURL;\n    }\n  })();\n  (function checkObjectDefinePropertyCompatibility() {\n    if (typeof Object.defineProperty !== 'undefined') {\n      var definePropertyPossible = true;\n      try {\n        if (hasDOM) {\n          Object.defineProperty(new Image(), 'id', { value: 'test' });\n        }\n        var Test = function Test() {};\n        Test.prototype = {\n          get id() {}\n        };\n        Object.defineProperty(new Test(), 'id', {\n          value: '',\n          configurable: true,\n          enumerable: true,\n          writable: false\n        });\n      } catch (e) {\n        definePropertyPossible = false;\n      }\n      if (definePropertyPossible) {\n        return;\n      }\n    }\n    Object.defineProperty = function objectDefineProperty(obj, name, def) {\n      delete obj[name];\n      if ('get' in def) {\n        obj.__defineGetter__(name, def['get']);\n      }\n      if ('set' in def) {\n        obj.__defineSetter__(name, def['set']);\n      }\n      if ('value' in def) {\n        obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\n          this.__defineGetter__(name, function objectDefinePropertyGetter() {\n            return value;\n          });\n          return value;\n        });\n        obj[name] = def.value;\n      }\n    };\n  })();\n  (function checkXMLHttpRequestResponseCompatibility() {\n    if (typeof XMLHttpRequest === 'undefined') {\n      return;\n    }\n    var xhrPrototype = XMLHttpRequest.prototype;\n    var xhr = new XMLHttpRequest();\n    if (!('overrideMimeType' in xhr)) {\n      Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n        value: function xmlHttpRequestOverrideMimeType(mimeType) {}\n      });\n    }\n    if ('responseType' in xhr) {\n      return;\n    }\n    Object.defineProperty(xhrPrototype, 'responseType', {\n      get: function xmlHttpRequestGetResponseType() {\n        return this._responseType || 'text';\n      },\n      set: function xmlHttpRequestSetResponseType(value) {\n        if (value === 'text' || value === 'arraybuffer') {\n          this._responseType = value;\n          if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n            this.overrideMimeType('text/plain; charset=x-user-defined');\n          }\n        }\n      }\n    });\n    if (typeof VBArray !== 'undefined') {\n      Object.defineProperty(xhrPrototype, 'response', {\n        get: function xmlHttpRequestResponseGet() {\n          if (this.responseType === 'arraybuffer') {\n            return new Uint8Array(new VBArray(this.responseBody).toArray());\n          }\n          return this.responseText;\n        }\n      });\n      return;\n    }\n    Object.defineProperty(xhrPrototype, 'response', {\n      get: function xmlHttpRequestResponseGet() {\n        if (this.responseType !== 'arraybuffer') {\n          return this.responseText;\n        }\n        var text = this.responseText;\n        var i,\n            n = text.length;\n        var result = new Uint8Array(n);\n        for (i = 0; i < n; ++i) {\n          result[i] = text.charCodeAt(i) & 0xFF;\n        }\n        return result.buffer;\n      }\n    });\n  })();\n  (function checkWindowBtoaCompatibility() {\n    if ('btoa' in globalScope) {\n      return;\n    }\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    globalScope.btoa = function (chars) {\n      var buffer = '';\n      var i, n;\n      for (i = 0, n = chars.length; i < n; i += 3) {\n        var b1 = chars.charCodeAt(i) & 0xFF;\n        var b2 = chars.charCodeAt(i + 1) & 0xFF;\n        var b3 = chars.charCodeAt(i + 2) & 0xFF;\n        var d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n        var d3 = i + 1 < n ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n        var d4 = i + 2 < n ? b3 & 0x3F : 64;\n        buffer += digits.charAt(d1) + digits.charAt(d2) + digits.charAt(d3) + digits.charAt(d4);\n      }\n      return buffer;\n    };\n  })();\n  (function checkWindowAtobCompatibility() {\n    if ('atob' in globalScope) {\n      return;\n    }\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    globalScope.atob = function (input) {\n      input = input.replace(/=+$/, '');\n      if (input.length % 4 === 1) {\n        throw new Error('bad atob input');\n      }\n      for (var bc = 0, bs, buffer, idx = 0, output = ''; buffer = input.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        buffer = digits.indexOf(buffer);\n      }\n      return output;\n    };\n  })();\n  (function checkFunctionPrototypeBindCompatibility() {\n    if (typeof Function.prototype.bind !== 'undefined') {\n      return;\n    }\n    Function.prototype.bind = function functionPrototypeBind(obj) {\n      var fn = this,\n          headArgs = Array.prototype.slice.call(arguments, 1);\n      var bound = function functionPrototypeBindBound() {\n        var args = headArgs.concat(Array.prototype.slice.call(arguments));\n        return fn.apply(obj, args);\n      };\n      return bound;\n    };\n  })();\n  (function checkDatasetProperty() {\n    if (!hasDOM) {\n      return;\n    }\n    var div = document.createElement('div');\n    if ('dataset' in div) {\n      return;\n    }\n    Object.defineProperty(HTMLElement.prototype, 'dataset', {\n      get: function get() {\n        if (this._dataset) {\n          return this._dataset;\n        }\n        var dataset = {};\n        for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n          var attribute = this.attributes[j];\n          if (attribute.name.substring(0, 5) !== 'data-') {\n            continue;\n          }\n          var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n            return ch.toUpperCase();\n          });\n          dataset[key] = attribute.value;\n        }\n        Object.defineProperty(this, '_dataset', {\n          value: dataset,\n          writable: false,\n          enumerable: false\n        });\n        return dataset;\n      },\n\n      enumerable: true\n    });\n  })();\n  (function checkClassListProperty() {\n    function changeList(element, itemName, add, remove) {\n      var s = element.className || '';\n      var list = s.split(/\\s+/g);\n      if (list[0] === '') {\n        list.shift();\n      }\n      var index = list.indexOf(itemName);\n      if (index < 0 && add) {\n        list.push(itemName);\n      }\n      if (index >= 0 && remove) {\n        list.splice(index, 1);\n      }\n      element.className = list.join(' ');\n      return index >= 0;\n    }\n    if (!hasDOM) {\n      return;\n    }\n    var div = document.createElement('div');\n    if ('classList' in div) {\n      return;\n    }\n    var classListPrototype = {\n      add: function add(name) {\n        changeList(this.element, name, true, false);\n      },\n      contains: function contains(name) {\n        return changeList(this.element, name, false, false);\n      },\n      remove: function remove(name) {\n        changeList(this.element, name, false, true);\n      },\n      toggle: function toggle(name) {\n        changeList(this.element, name, true, true);\n      }\n    };\n    Object.defineProperty(HTMLElement.prototype, 'classList', {\n      get: function get() {\n        if (this._classList) {\n          return this._classList;\n        }\n        var classList = Object.create(classListPrototype, {\n          element: {\n            value: this,\n            writable: false,\n            enumerable: true\n          }\n        });\n        Object.defineProperty(this, '_classList', {\n          value: classList,\n          writable: false,\n          enumerable: false\n        });\n        return classList;\n      },\n\n      enumerable: true\n    });\n  })();\n  (function checkWorkerConsoleCompatibility() {\n    if (typeof importScripts === 'undefined' || 'console' in globalScope) {\n      return;\n    }\n    var consoleTimer = {};\n    var workerConsole = {\n      log: function log() {\n        var args = Array.prototype.slice.call(arguments);\n        globalScope.postMessage({\n          targetName: 'main',\n          action: 'console_log',\n          data: args\n        });\n      },\n      error: function error() {\n        var args = Array.prototype.slice.call(arguments);\n        globalScope.postMessage({\n          targetName: 'main',\n          action: 'console_error',\n          data: args\n        });\n      },\n      time: function time(name) {\n        consoleTimer[name] = Date.now();\n      },\n      timeEnd: function timeEnd(name) {\n        var time = consoleTimer[name];\n        if (!time) {\n          throw new Error('Unknown timer name ' + name);\n        }\n        this.log('Timer:', name, Date.now() - time);\n      }\n    };\n    globalScope.console = workerConsole;\n  })();\n  (function checkConsoleCompatibility() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!('console' in window)) {\n      window.console = {\n        log: function log() {},\n        error: function error() {},\n        warn: function warn() {}\n      };\n      return;\n    }\n    if (!('bind' in console.log)) {\n      console.log = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.log);\n      console.error = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.error);\n      console.warn = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.warn);\n      return;\n    }\n  })();\n  (function checkOnClickCompatibility() {\n    function ignoreIfTargetDisabled(event) {\n      if (isDisabled(event.target)) {\n        event.stopPropagation();\n      }\n    }\n    function isDisabled(node) {\n      return node.disabled || node.parentNode && isDisabled(node.parentNode);\n    }\n    if (isOpera) {\n      document.addEventListener('click', ignoreIfTargetDisabled, true);\n    }\n  })();\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      PDFJS.disableCreateObjectURL = true;\n    }\n  })();\n  (function checkNavigatorLanguage() {\n    if (typeof navigator === 'undefined') {\n      return;\n    }\n    if ('language' in navigator) {\n      return;\n    }\n    PDFJS.locale = navigator.userLanguage || 'en-US';\n  })();\n  (function checkRangeRequests() {\n    if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {\n      PDFJS.disableRange = true;\n      PDFJS.disableStream = true;\n    }\n  })();\n  (function checkHistoryManipulation() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!history.pushState || isAndroidPre3) {\n      PDFJS.disableHistory = true;\n    }\n  })();\n  (function checkSetPresenceInImageData() {\n    if (!hasDOM) {\n      return;\n    }\n    if (window.CanvasPixelArray) {\n      if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n        window.CanvasPixelArray.prototype.set = function (arr) {\n          for (var i = 0, ii = this.length; i < ii; i++) {\n            this[i] = arr[i];\n          }\n        };\n      }\n    } else {\n      var polyfill = false,\n          versionMatch;\n      if (isChrome) {\n        versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n        polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n      } else if (isAndroid) {\n        polyfill = isAndroidPre5;\n      } else if (isSafari) {\n        versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n        polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n      }\n      if (polyfill) {\n        var contextPrototype = window.CanvasRenderingContext2D.prototype;\n        var createImageData = contextPrototype.createImageData;\n        contextPrototype.createImageData = function (w, h) {\n          var imageData = createImageData.call(this, w, h);\n          imageData.data.set = function (arr) {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n              this[i] = arr[i];\n            }\n          };\n          return imageData;\n        };\n        contextPrototype = null;\n      }\n    }\n  })();\n  (function checkRequestAnimationFrame() {\n    function installFakeAnimationFrameFunctions() {\n      window.requestAnimationFrame = function (callback) {\n        return window.setTimeout(callback, 20);\n      };\n      window.cancelAnimationFrame = function (timeoutID) {\n        window.clearTimeout(timeoutID);\n      };\n    }\n    if (!hasDOM) {\n      return;\n    }\n    if (isIOS) {\n      installFakeAnimationFrameFunctions();\n      return;\n    }\n    if ('requestAnimationFrame' in window) {\n      return;\n    }\n    window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame;\n    if (window.requestAnimationFrame) {\n      return;\n    }\n    installFakeAnimationFrameFunctions();\n  })();\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      PDFJS.maxCanvasPixels = 5242880;\n    }\n  })();\n  (function checkFullscreenSupport() {\n    if (!hasDOM) {\n      return;\n    }\n    if (isIE && window.parent !== window) {\n      PDFJS.disableFullscreen = true;\n    }\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkInputTypeNumberAssign() {\n    if (!hasDOM) {\n      return;\n    }\n    var el = document.createElement('input');\n    try {\n      el.type = 'number';\n    } catch (ex) {\n      var inputProto = el.constructor.prototype;\n      var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n      Object.defineProperty(inputProto, 'type', {\n        get: function get() {\n          return typeProperty.get.call(this);\n        },\n        set: function set(value) {\n          typeProperty.set.call(this, value === 'number' ? 'text' : value);\n        },\n\n        enumerable: true,\n        configurable: true\n      });\n    }\n  })();\n  (function checkDocumentReadyState() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!document.attachEvent) {\n      return;\n    }\n    var documentProto = document.constructor.prototype;\n    var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n    Object.defineProperty(documentProto, 'readyState', {\n      get: function get() {\n        var value = readyStateProto.get.call(this);\n        return value === 'interactive' ? 'loading' : value;\n      },\n      set: function set(value) {\n        readyStateProto.set.call(this, value);\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(98);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(100);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(103);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(112);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n}\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(87);\nmodule.exports = __w_pdfjs_require__(7).Uint8ClampedArray;\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(88)('Uint8', 1, function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (__w_pdfjs_require__(11)) {\n  var LIBRARY = __w_pdfjs_require__(28);\n  var global = __w_pdfjs_require__(1);\n  var fails = __w_pdfjs_require__(12);\n  var $export = __w_pdfjs_require__(6);\n  var $typed = __w_pdfjs_require__(49);\n  var $buffer = __w_pdfjs_require__(89);\n  var ctx = __w_pdfjs_require__(13);\n  var anInstance = __w_pdfjs_require__(23);\n  var propertyDesc = __w_pdfjs_require__(29);\n  var hide = __w_pdfjs_require__(8);\n  var redefineAll = __w_pdfjs_require__(22);\n  var toInteger = __w_pdfjs_require__(18);\n  var toLength = __w_pdfjs_require__(14);\n  var toIndex = __w_pdfjs_require__(50);\n  var toAbsoluteIndex = __w_pdfjs_require__(31);\n  var toPrimitive = __w_pdfjs_require__(36);\n  var has = __w_pdfjs_require__(10);\n  var classof = __w_pdfjs_require__(32);\n  var isObject = __w_pdfjs_require__(3);\n  var toObject = __w_pdfjs_require__(19);\n  var isArrayIter = __w_pdfjs_require__(56);\n  var create = __w_pdfjs_require__(57);\n  var getPrototypeOf = __w_pdfjs_require__(59);\n  var gOPN = __w_pdfjs_require__(51).f;\n  var getIterFn = __w_pdfjs_require__(60);\n  var uid = __w_pdfjs_require__(17);\n  var wks = __w_pdfjs_require__(4);\n  var createArrayMethod = __w_pdfjs_require__(42);\n  var createArrayIncludes = __w_pdfjs_require__(53);\n  var speciesConstructor = __w_pdfjs_require__(43);\n  var ArrayIterators = __w_pdfjs_require__(61);\n  var Iterators = __w_pdfjs_require__(20);\n  var $iterDetect = __w_pdfjs_require__(44);\n  var setSpecies = __w_pdfjs_require__(63);\n  var arrayFill = __w_pdfjs_require__(55);\n  var arrayCopyWithin = __w_pdfjs_require__(97);\n  var $DP = __w_pdfjs_require__(15);\n  var $GOPD = __w_pdfjs_require__(64);\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n  var LITTLE_ENDIAN = fails(function () {\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n  var toOffset = function toOffset(it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n  var validate = function validate(it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n  var allocate = function allocate(C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    }\n    return new C(length);\n  };\n  var speciesFromList = function speciesFromList(O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n  var fromList = function fromList(C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) {\n      result[index] = list[index++];\n    }return result;\n  };\n  var addGetter = function addGetter(it, key, internal) {\n    dP(it, key, {\n      get: function get() {\n        return this._d[internal];\n      }\n    });\n  };\n  var $from = function from(source) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      }\n      O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n  var $of = function of() {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) {\n      result[index] = arguments[index++];\n    }return result;\n  };\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () {\n    arrayToLocaleString.call(new Uint8Array(1));\n  });\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n  var proto = {\n    copyWithin: function copyWithin(target, start) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value) {\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) {\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement) {\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn) {\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn) {\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      }\n      return that;\n    },\n    some: function some(callbackfn) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin));\n    }\n  };\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n  var $set = function set(arrayLike) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) {\n      this[offset + index] = src[index++];\n    }\n  };\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n  var isTAIndex = function isTAIndex(target, key) {\n    return isObject(target) && target[TYPED_ARRAY] && (typeof key === 'undefined' ? 'undefined' : _typeof(key)) != 'symbol' && key in target && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set') && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {\n      target[key] = desc.value;\n      return target;\n    }\n    return dP(target, key, desc);\n  };\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n  if (fails(function () {\n    arrayToString.call({});\n  })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function constructor() {},\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function get() {\n      return this[TYPED_ARRAY];\n    }\n  });\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function getter(that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function setter(that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function addElement(that, index) {\n      dP(that, index, {\n        get: function get() {\n          return getter(this, index);\n        },\n        set: function set(value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) {\n          addElement(that, index++);\n        }\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1);\n    }) || !$iterDetect(function (iter) {\n      new TypedArray();\n      new TypedArray(null);\n      new TypedArray(1.5);\n      new TypedArray(iter);\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function get() {\n          return NAME;\n        }\n      });\n    }\n    O[NAME] = TypedArray;\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n    $export($export.S, NAME, { BYTES_PER_ELEMENT: BYTES });\n    $export($export.S + $export.F * fails(function () {\n      Base.of.call(TypedArray, 1);\n    }), NAME, {\n      from: $from,\n      of: $of\n    });\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n    $export($export.P, NAME, proto);\n    setSpecies(NAME);\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () {};\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar DESCRIPTORS = __w_pdfjs_require__(11);\nvar LIBRARY = __w_pdfjs_require__(28);\nvar $typed = __w_pdfjs_require__(49);\nvar hide = __w_pdfjs_require__(8);\nvar redefineAll = __w_pdfjs_require__(22);\nvar fails = __w_pdfjs_require__(12);\nvar anInstance = __w_pdfjs_require__(23);\nvar toInteger = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(14);\nvar toIndex = __w_pdfjs_require__(50);\nvar gOPN = __w_pdfjs_require__(51).f;\nvar dP = __w_pdfjs_require__(15).f;\nvar arrayFill = __w_pdfjs_require__(55);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  if (value != value || value === Infinity) {\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) {}\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) {}\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) {}\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, {\n    get: function get() {\n      return this[internal];\n    }\n  });\n}\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) {\n    store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n  }\n}\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1);\n  }) || fails(function () {\n    new $ArrayBuffer();\n    new $ArrayBuffer(1.5);\n    new $ArrayBuffer(NaN);\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar anObject = __w_pdfjs_require__(9);\nvar getKeys = __w_pdfjs_require__(41);\nmodule.exports = __w_pdfjs_require__(11) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(92);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(93);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(24);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(8)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(57);\nvar descriptor = __w_pdfjs_require__(29);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(8)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toObject = __w_pdfjs_require__(19);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = [].copyWithin || function copyWithin(target, start) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];else delete O[to];\n    to += inc;\n    from += inc;\n  }\n  return O;\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(99);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(101);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(102) });\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(66);\n__w_pdfjs_require__(104);\n__w_pdfjs_require__(67);\n__w_pdfjs_require__(106);\n__w_pdfjs_require__(110);\n__w_pdfjs_require__(111);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(105)(true);\n__w_pdfjs_require__(62)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(28);\nvar global = __w_pdfjs_require__(1);\nvar ctx = __w_pdfjs_require__(13);\nvar classof = __w_pdfjs_require__(32);\nvar $export = __w_pdfjs_require__(6);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(21);\nvar anInstance = __w_pdfjs_require__(23);\nvar forOf = __w_pdfjs_require__(33);\nvar speciesConstructor = __w_pdfjs_require__(43);\nvar task = __w_pdfjs_require__(68).set;\nvar microtask = __w_pdfjs_require__(109)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(45);\nvar perform = __w_pdfjs_require__(69);\nvar promiseResolve = __w_pdfjs_require__(70);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) domain.exit();\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  if (promise._h == 1) return false;\n  var chain = promise._a || promise._c;\n  var i = 0;\n  var reaction;\n  while (chain.length > i) {\n    reaction = chain[i++];\n    if (reaction.fail || !isUnhandled(reaction.promise)) return false;\n  }\n  return true;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(22)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(25)($Promise, PROMISE);\n__w_pdfjs_require__(63)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(44)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar macrotask = __w_pdfjs_require__(68).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(24)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(1);\nvar speciesConstructor = __w_pdfjs_require__(43);\nvar promiseResolve = __w_pdfjs_require__(70);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar newPromiseCapability = __w_pdfjs_require__(45);\nvar perform = __w_pdfjs_require__(69);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(66);\n__w_pdfjs_require__(67);\n__w_pdfjs_require__(113);\n__w_pdfjs_require__(120);\n__w_pdfjs_require__(122);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(42)(0);\nvar redefine = __w_pdfjs_require__(16);\nvar meta = __w_pdfjs_require__(46);\nvar assign = __w_pdfjs_require__(114);\nvar weak = __w_pdfjs_require__(116);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(12);\nvar validate = __w_pdfjs_require__(71);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(117)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(41);\nvar gOPS = __w_pdfjs_require__(115);\nvar pIE = __w_pdfjs_require__(65);\nvar toObject = __w_pdfjs_require__(19);\nvar IObject = __w_pdfjs_require__(37);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(12)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(22);\nvar getWeak = __w_pdfjs_require__(46).getWeak;\nvar anObject = __w_pdfjs_require__(9);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(23);\nvar forOf = __w_pdfjs_require__(33);\nvar createArrayMethod = __w_pdfjs_require__(42);\nvar $has = __w_pdfjs_require__(10);\nvar validate = __w_pdfjs_require__(71);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(16);\nvar redefineAll = __w_pdfjs_require__(22);\nvar meta = __w_pdfjs_require__(46);\nvar forOf = __w_pdfjs_require__(33);\nvar anInstance = __w_pdfjs_require__(23);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(12);\nvar $iterDetect = __w_pdfjs_require__(44);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar inheritIfRequired = __w_pdfjs_require__(118);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(119).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(9);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(13)(Function.call, __w_pdfjs_require__(64).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(121)('WeakMap');\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(123)('WeakMap');\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar aFunction = __w_pdfjs_require__(21);\nvar ctx = __w_pdfjs_require__(13);\nvar forOf = __w_pdfjs_require__(33);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(125).ReadableStream;\n}\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(72);\n\nvar _document = __w_pdfjs_require__(127);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    throw new Error('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(73);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _evaluator = __w_pdfjs_require__(77);\n\nvar _annotation = __w_pdfjs_require__(144);\n\nvar _crypto = __w_pdfjs_require__(76);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _function = __w_pdfjs_require__(81);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _evaluator.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              component.blockData[offset + z] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ccitt = __w_pdfjs_require__(130);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _jbig = __w_pdfjs_require__(132);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      throw new Jbig2Error('MMR encoding is not supported');\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0;\n      while (true) {\n        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n        }\n        newSymbols.push(bitmap);\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n        var t = stripSize * stripT + currentT;\n        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    at.push({\n      x: -patternWidth,\n      y: 0\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var grayScaleBitPlanes = [];\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      grayScaleBitPlanes[i] = decodeBitmap(mmr, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        if (textRegion.huffman) {\n          throw new Jbig2Error('huffman is not supported');\n        }\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2(data, start, end) {\n    var position = start;\n    if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n      throw new Jbig2Error('invalid header');\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    readSegments(header, data, position, end);\n    throw new Error('Not implemented');\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables;\n      if (dictionary.huffman) {\n        throw new Jbig2Error('huffman is not supported');\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    }\n  };\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      throw new Error('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      throw new Error('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      throw new Error('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      throw new Error('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      throw new Error('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(78);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar _standard_fonts = __w_pdfjs_require__(79);\n\nvar _unicode = __w_pdfjs_require__(80);\n\nvar _font_renderer = __w_pdfjs_require__(136);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _type1_parser = __w_pdfjs_require__(137);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap(cmap) {\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      throw new Error('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      var header = readOpenTypeHeader(font);\n      var numTables = header.numTables;\n      var cff, cffFile;\n      var tables = Object.create(null);\n      tables['OS/2'] = null;\n      tables['cmap'] = null;\n      tables['head'] = null;\n      tables['hhea'] = null;\n      tables['hmtx'] = null;\n      tables['maxp'] = null;\n      tables['name'] = null;\n      tables['post'] = null;\n      var table;\n      for (var i = 0; i < numTables; i++) {\n        table = readTableEntry(font);\n        if (VALID_TABLES.indexOf(table.tag) < 0) {\n          continue;\n        }\n        if (table.length === 0) {\n          continue;\n        }\n        tables[table.tag] = table;\n      }\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n                found = true;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n          }\n        } else {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCode = cmapMappings[i].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    headerBlockLength = headerBlock.length;\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    eexecBlockLength = eexecBlock.length;\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(78);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      throw new Error('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while ((token = this.getToken()) === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    throw new Error('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      throw new Error('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var i;\n      if (typeof input === 'string') {\n        var data = new Uint8Array(input.length * 2);\n        var length = 0;\n        for (i = 0; i < input.length; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && 'byteLength' in input) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (i = 0; i < blockCounts; i++) {\n        if (i & 1) {\n          k1 = dataUint32[i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar _jpx = __w_pdfjs_require__(74);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, res, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _stream.JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n          imgData.kind = _util.ImageKind.RGB_24BPP;\n          imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n          return imgData;\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(73);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar _evaluator = __w_pdfjs_require__(77);\n\nvar _stream = __w_pdfjs_require__(5);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _evaluator.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _evaluator.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _evaluator.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _evaluator.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      if (!(0, _primitives.isName)(_this4.data.fieldValue)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      _this4.data.fieldValue = _this4.data.fieldValue.name;\n    }\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.radioButton) {\n      _this4.data.fieldValue = _this4.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          _this4.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          _this4.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n    return _this4;\n  }\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/build/pdf.worker.js\n// module id = 0\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 1\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}